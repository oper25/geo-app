stages:
  - build
  - validate
  - deploy

build-docker:
  stage: build
  image: docker:24.0.5
  before_script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
  script:
    - docker build -f docker/Dockerfile-Py -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA .
    - docker build -f docker/Dockerfile-Py -t $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE:latest
  tags:
    - dkr
  only:
    - main
    - develop
    - dev

validate-helm:
  stage: validate
  image: alpine:latest
  before_script:
    - apk add --no-cache curl
    - curl -s https://get.helm.sh/helm-v3.12.0-linux-amd64.tar.gz | tar -xz
    - mv linux-amd64/helm /usr/local/bin/
  script:
    - helm lint helm/
  tags:
    - dkr
  only:
    - main
    - develop
    - dev

deploy-dev:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache curl
    - curl -o kubectl http://192.168.100.85:8080/kubectl || curl -LO https://dl.k8s.io/release/v1.28.0/bin/linux/amd64/kubectl
    - chmod +x kubectl && mv kubectl /usr/local/bin/
    - curl -s https://get.helm.sh/helm-v3.12.0-linux-amd64.tar.gz | tar -xz
    - mv linux-amd64/helm /usr/local/bin/
    - kubectl config set-cluster k8s --server="$KUBE_URL" --insecure-skip-tls-verify=true
    - kubectl config set-credentials gitlab --token="$KUBE_TOKEN"
    - kubectl config set-context default --cluster=k8s --user=gitlab
    - kubectl config use-context default
  script:
    - kubectl create namespace dev --dry-run=client -o yaml | kubectl apply -f -
    - |
      kubectl create secret docker-registry gitlab-registry \
        --docker-server=192.168.100.85:5050 \
        --docker-username=$CI_REGISTRY_USER \
        --docker-password=$CI_REGISTRY_PASSWORD \
        --namespace=dev --dry-run=client -o yaml | kubectl apply -f -
    - |
      kubectl patch serviceaccount default -n dev -p '{"imagePullSecrets": [{"name": "gitlab-registry"}]}'
    - helm upgrade --install $CI_PROJECT_NAME helm/ 
      --namespace dev 
      --set image.repository=$CI_REGISTRY_IMAGE 
      --set image.tag=$CI_COMMIT_SHA
      --wait
  environment:
    name: dev
  tags:
    - dkr
  only:
    - main
    - develop
    - dev
